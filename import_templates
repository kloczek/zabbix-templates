#!/bin/bash

. ../zapish/zapish.inc

echo "not finished"; exit

for i in \
	"ICMP" \
	"MIB/F5-BIGIP-LOCAL-MIB"  \
	"MIB/F5-BIGIP-SYSTEM-MIB" \
	"MIB/IF-MIB" \
	"MIB/IP-MIB" \
	"MIB/SNMP-MPD-MIB" \
	"MIB/SNMP-USER-BASED-SM-MIB" \
	"MIB/SNMP-VIEW-BASED-ACM-MIB" \
	"MIB/SNMPv2-MIB" \
	"MIB/UDP-MIB" \
	"OS Linux" \
	"OS Solaris" \
	"OS Windows" \
	"Service Apache" \
	"Service MySQL" \
	"Service Nginx" \
	"Service php-fpm" \
	"Service Zabbix Agent" \
	"Service Zabbix Proxy" \
	"Service Zabbix Server" \
	"SNMP Devices/BIG-IP 5000" \
	"SNMP Devices/DSL-3782"
	do
		template_name=$(basename "$i")
		templates="$(zabbix_api template.get \
			"$(json_list params \
				"$(json_str output simple \
				"")" \
				"$(json_list filter \
					"$(json_array_str "name" \
						"${template_name}" \
					"")" \
				"")" \
			"")" \
		)"

		templateid="$(json_get "${templates=}" .result[].templateid)"

		xml_output="$(zabbix_api configuration.export \
			"$(json_list params \
				"$(json_list options \
					"$(json_array_num templates \
						${templateid} \
					"")" \
				"")" \
				"$(json_str format xml \
				"")" \
			"")" \
		)"

		# - extract from file template name
		# - check is template name is in zabbix
		# - if no -> import template
		# - if no -> backup current template then import new one
		
		# Create template directory if it does not exiest
		if [ ! -d "${i}" ]; then
			mkdir -p "${i}"
		fi
		
		# export template
		echo "${xml_output}" | jq -r .result | xmllint --format - > "${i}/${template_name}".new.xml
		if [ -f "${i}/${template_name}.xml" ]; then
			cmp -s <(sed 4d "${i}/${template_name}".new.xml) <(sed 4d "${i}/${template_name}.xml")
			if [ $? -ne 0 ]; then
				printf "Template id=%7s, Name=%-40s export to %s.xml\n" ${templateid} "\"${template_name}\"" "${i}/${template_name}"
				mv -f "${i}/${template_name}"{.new,}.xml
			else
				printf "Template id=%7s, Name=%-40s no changes\n" ${templateid} \""${template_name}"\"
				rm -f "${i}/${template_name}".new.xml
			fi
		else
			printf "Template id=%7s, Name=%-40s export to %s.xml\n" ${templateid} "\"${template_name}\"" "${i}/${template_name}"
			mv -f "${i}/${template_name}"{.new,}.xml
		fi
	done
